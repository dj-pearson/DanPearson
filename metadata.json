{
  "src/pages/Connect.jsx": "This file contains the contact/connect page component for Dan Pearson's portfolio website. It provides a comprehensive contact form and displays contact information including email, phone, and location details. The page features a contact form with validation, social media links, and animated elements using Framer Motion. It serves as the main communication hub for potential clients and collaborators to reach out to Dan. Keywords: ['contact', 'form', 'connect', 'communication', 'social']. component_type: ['UI']. functionality: ['Provides contact form and displays contact information for visitors to reach out']. use_case: ['Client inquiries', 'Business communication', 'Networking', 'Project discussions']. related_files: ['src/App.jsx', 'src/components/Navbar.jsx']",
  "src/contexts/AdminContext.jsx": "This file provides the admin context for managing authentication state and blog operations. It integrates with Supabase authentication service to handle login, logout, password reset, and user session management. The context also manages blog posts, statistics, and AI settings for the admin dashboard. It serves as the central state management for all admin-related functionality. Keywords: ['Admin Context', 'Authentication', 'State Management', 'Blog Management', 'Supabase Integration']. component_type: ['functional']. functionality: ['Manages admin authentication state and provides methods for login, logout, and user management']. use_case: ['Admin dashboard state management', 'User authentication flow', 'Blog post management']. related_files: ['src/utils/SupabaseAuthService.js', 'src/pages/admin/AdminLogin.jsx']",
  "src/pages/admin/AdminDashboard.jsx": "This is the main dashboard component for the admin panel that provides a comprehensive overview of the website's performance and management tools. It displays key statistics, recent blog posts, quick action buttons, AI features overview, and system status indicators. The dashboard includes interactive elements for creating new blog posts with AI assistance, managing AI tools, and monitoring website analytics. It features a modern design with gradient backgrounds, hover effects, and responsive layout that adapts to different screen sizes. The component serves as the central hub for all administrative tasks and website management. Keywords: ['admin-dashboard', 'statistics', 'blog-management', 'ai-tools', 'quick-actions', 'system-status', 'analytics']. component_type: ['UI', 'layout']. functionality: ['Provides a comprehensive admin dashboard with statistics, management tools, and quick actions for website administration']. use_case: ['Admin panel homepage', 'Website management interface', 'Content management system', 'Analytics dashboard']. related_files: ['src/contexts/AdminContext.jsx', 'src/components/DashboardStats.jsx', 'src/pages/admin/BlogManager.jsx']",
  "public/robots.txt": "This is a robots.txt file that provides instructions to web crawlers and search engine bots about which parts of the website they can access. It allows general crawling of the site while blocking access to admin areas, API endpoints, and private sections for security purposes. The file specifically blocks AI training bots and scrapers including GPTBot, ChatGPT-User, Claude-Web, and others to prevent unauthorized content scraping. It includes crawl delay settings to manage server load and provides sitemap locations for better SEO indexing. This file is essential for website security, SEO optimization, and controlling bot access. Keywords: ['robots-txt', 'seo', 'web-crawlers', 'security', 'ai-bot-blocking', 'sitemap', 'access-control']. component_type: ['configuration', 'SEO']. functionality: ['Controls web crawler access and provides SEO directives for search engines']. use_case: ['SEO optimization', 'Security configuration', 'Bot access control', 'Search engine indexing']. related_files: ['public/sitemap.xml', 'public/index.html', 'src/components/SEOHead.jsx']",
  "src/components/TechElements3D.jsx": "This is an interactive 3D visualization component that displays rotating technology elements around a central hub to showcase Dan's expertise areas. It creates animated tech icons (AI, Blockchain, NFT, Automation, Sales, Innovation) that orbit in a circular pattern with smooth animations and interactive hover effects. The component includes pulse effects, connection lines, data streams, and particle animations to create an engaging visual representation of technical skills. It features automatic rotation cycles, click interactions, and responsive design that adapts to different screen sizes. This component serves as an eye-catching visual element for the portfolio's hero section or about page. Keywords: ['3d-animation', 'tech-visualization', 'interactive-elements', 'framer-motion', 'orbital-animation', 'particle-effects', 'skills-showcase']. component_type: ['UI', 'interactive']. functionality: ['Creates an animated 3D visualization of technology skills with interactive orbital elements and particle effects']. use_case: ['Portfolio hero section', 'Skills showcase', 'Interactive background element', 'Technology demonstration']. related_files: ['src/components/Scene3D.jsx', 'src/pages/Home.jsx', 'src/components/Hero.jsx']",
  "src/components/Scene3D.jsx": "This is a complex 3D scene component that creates an immersive interactive background with multiple animated layers and effects. It features a central 3D sphere with orbiting tech elements, neural network patterns, data particles, and binary code rain effects. The component responds to mouse movement for parallax effects and includes scroll-based animations using Framer Motion. It creates a futuristic tech atmosphere with glowing effects, rotating rings, and floating particles that represent the intersection of AI, blockchain, and modern technology. This serves as the main visual centerpiece for the portfolio website's background. Keywords: ['3d-scene', 'interactive-background', 'parallax-effects', 'particle-system', 'neural-network', 'tech-atmosphere', 'scroll-animation']. component_type: ['UI', 'interactive', 'background']. functionality: ['Creates an immersive 3D background scene with interactive elements, particle effects, and scroll-based animations']. use_case: ['Portfolio background', 'Interactive homepage element', 'Tech showcase visualization', 'Immersive user experience']. related_files: ['src/components/TechElements3D.jsx', 'src/pages/Home.jsx', 'src/components/Hero.jsx']",
  "src/components/Footer.jsx": "This is the Footer component that appears at the bottom of all pages in the Dan Pearson portfolio website. It contains contact information, social media links, quick navigation links, and copyright information. The footer is styled with a dark theme using Tailwind CSS and includes animated social media icons. It provides easy access to important pages and contact methods for visitors. Keywords: ['footer', 'contact', 'social-media', 'navigation', 'copyright']. component_type: ['layout']. functionality: ['Displays footer content with contact information, social links, and navigation']. use_case: ['Website footer', 'Contact information display', 'Social media links']. related_files: ['src/App.jsx', 'src/components/Navbar.jsx']",
  "src/components/Hero3D.jsx": "This file creates an interactive 3D hero section component that responds to user mouse movements and displays animated visual elements. It features a complex animated sphere with multiple rotating rings, orbiting elements, floating particles, and a tech grid overlay background. The component uses mouse position tracking to create parallax effects and includes various animated elements like pulsing center dots, rotating rings, and floating particles that create an engaging visual experience. The design incorporates cyberpunk-style aesthetics with cyan and blue color schemes, making it perfect for technology-focused websites. Keywords: ['3d-animation', 'interactive', 'hero-section', 'mouse-tracking', 'particles', 'cyberpunk', 'visual-effects']. component_type: ['UI']. functionality: ['Creates interactive 3D animated hero section with mouse-responsive effects and floating particles']. use_case: ['Homepage hero section', 'Interactive visual displays', 'Technology showcases', 'Engaging user interfaces']. related_files: ['src/pages/Home.jsx', 'src/components/Navbar.jsx']",
  "src/config/CDNConfig.js": "This configuration file manages Content Delivery Network (CDN) settings and provides a comprehensive CDN management system for optimizing website performance. It includes configurations for multiple CDN providers like Cloudflare, Bunny.net, and KeyCDN, along with detailed asset optimization settings for different file types including images, CSS, JavaScript, and HTML files. The file also contains image optimization parameters, compression settings, security headers, and a CDNManager class that handles cache management, purging, and performance statistics. This system ensures fast content delivery, reduced server load, and improved user experience through strategic caching and optimization. Keywords: ['cdn', 'performance', 'caching', 'optimization', 'image-processing', 'compression', 'security-headers']. component_type: ['functional']. functionality: ['Manages CDN configuration, asset optimization, caching rules, and performance monitoring for web applications']. use_case: ['Website performance optimization', 'Asset delivery management', 'Cache control', 'Image optimization', 'Bandwidth reduction']. related_files: ['src/utils/SecurityUtils.js', 'src/config/SecurityConfig.js']",
  "src/utils/SecurityUtils.js": "This utility file provides comprehensive security functions for web application protection including password validation, input sanitization, and security monitoring. It contains methods for validating password strength with customizable criteria, sanitizing user inputs to prevent XSS and SQL injection attacks, generating secure tokens, and implementing client-side rate limiting. The file also includes secure local storage functionality with encryption capabilities, email validation with security checks, and Content Security Policy violation monitoring. Additionally, it provides security initialization functions that monitor for suspicious activities and potential security threats, making it essential for maintaining application security standards. Keywords: ['security', 'password-validation', 'input-sanitization', 'xss-protection', 'rate-limiting', 'encryption', 'monitoring']. component_type: ['functional']. functionality: ['Provides comprehensive security utilities including password validation, input sanitization, and threat monitoring']. use_case: ['User authentication security', 'Input validation', 'XSS prevention', 'Rate limiting implementation', 'Security monitoring']. related_files: ['src/config/SecurityConfig.js', 'src/contexts/AdminContext.jsx', 'src/pages/admin/AdminLogin.jsx']",
  "src/App.jsx": "This is the main application component that sets up routing, context providers, and the overall application structure. It handles both public and admin routes, wrapping the entire application with necessary providers and managing the navigation between different sections of the portfolio site. Keywords: ['routing', 'app', 'main', 'context', 'navigation']. component_type: ['main', 'routing', 'layout']. functionality: ['Sets up application routing, context providers, and manages navigation between public and admin sections of the portfolio']. use_case: ['Application entry point', 'Route management', 'Context provider setup']. related_files: ['src/contexts/AdminContext.jsx', 'src/contexts/UserContext.jsx', 'src/components/Navbar.jsx']",
  "src/components/SEO.jsx": "This is a comprehensive SEO component that handles all search engine optimization aspects for the portfolio website. It manages meta tags, Open Graph properties, Twitter cards, structured data, and various SEO optimizations including canonical URLs, image optimization hints, and social media integration. The component dynamically generates SEO-friendly metadata for different pages and content types, ensuring optimal search engine visibility and social media sharing capabilities. It also includes performance optimizations like preconnect hints and resource preloading for better Core Web Vitals scores. Keywords: ['SEO', 'meta-tags', 'Open-Graph', 'Twitter-cards', 'structured-data', 'search-optimization', 'social-media']. component_type: ['SEO', 'utility']. functionality: ['Manages comprehensive SEO metadata and optimization for all pages, including social media integration and structured data']. use_case: ['Page SEO optimization', 'Social media sharing', 'Search engine visibility', 'Blog post metadata']. related_files: ['src/components/StructuredData.jsx', 'src/pages/*.jsx', 'src/utils/SitemapGenerator.js']",
  "src/components/settings/SecuritySettings.jsx": "This component provides a comprehensive security configuration interface for the admin dashboard. It allows administrators to manage authentication settings, two-factor authentication, security monitoring, and various security policies. The interface includes controls for session timeouts, login attempt limits, password policies, audit logging, and account lockout features. It also displays real-time security status indicators and provides security recommendations based on current configurations. The component includes functionality to test security configurations and clear system caches when needed. Keywords: ['security', 'authentication', '2FA', 'admin-settings', 'security-monitoring', 'audit-log', 'password-policy']. component_type: ['admin', 'security', 'settings']. functionality: ['Provides comprehensive security configuration interface with real-time status monitoring and testing capabilities']. use_case: ['Admin security configuration', 'Security policy management', 'Authentication setup', 'Security monitoring']. related_files: ['src/components/settings/PerformanceSettings.jsx', 'src/components/admin/AdminDashboard.jsx', 'src/utils/auth.js']",
  "src/components/settings/PerformanceSettings.jsx": "This component manages performance optimization settings for the website, including caching strategies, image optimization, compression, and Core Web Vitals monitoring. It provides controls for enabling various performance features like lazy loading, minification, preloading critical resources, and different caching strategies. The interface displays real-time performance metrics, Core Web Vitals scores, and allows administrators to run performance tests and clear caches. It includes recommendations for optimal performance configurations and visual indicators for current performance status across different optimization categories. Keywords: ['performance', 'caching', 'optimization', 'Core-Web-Vitals', 'image-optimization', 'compression', 'lazy-loading']. component_type: ['admin', 'performance', 'settings']. functionality: ['Manages website performance optimization settings with real-time monitoring and testing capabilities']. use_case: ['Performance optimization', 'Cache management', 'Core Web Vitals improvement', 'Site speed optimization']. related_files: ['src/components/settings/SecuritySettings.jsx', 'src/utils/performance.js', 'src/components/admin/AdminDashboard.jsx']",
  "src/pages/AITools.jsx": "This is a comprehensive AI Tools page component that showcases cutting-edge AI technologies, agents, MCP servers, and emerging tools. The page features an interactive category filter system allowing users to browse different types of AI tools including AI Agents (like Claude Computer Use and OpenAI Swarm), MCP Servers (Model Context Protocol servers for file systems and databases), Development Tools (like Cursor AI IDE and Bolt.new), and Emerging Technologies (like NotebookLM and Agentic RAG systems). Each tool card displays detailed information including features, complexity level, pricing model, status, and performance metrics. The component includes hover effects, animated transitions, and a trends section highlighting what's next in AI development. Keywords: ['AI Tools', 'Machine Learning', 'AI Agents', 'MCP Servers', 'Development Tools', 'Emerging Technology', 'Artificial Intelligence', 'Tech Showcase']. component_type: ['UI', 'page', 'interactive']. functionality: ['Displays comprehensive catalog of AI tools and technologies with filtering, detailed information cards, and interactive elements']. use_case: ['Technology showcase', 'AI tool discovery', 'Developer resources', 'Tech portfolio display']. related_files: ['src/components/Navbar.jsx', 'src/App.jsx', 'src/pages/Home.jsx']",
  "src/pages/About.jsx": "This page presents Dan Pearson's personal and professional background in a structured, engaging format. It covers his 15+ years of sales leadership experience, expertise in the fitness industry, NFT development background, and cutting-edge technology skills. The page is organized into sections covering his background, work experience, core skills, and professional goals. It includes animated sections that reveal content as users scroll, showcasing his diverse skill set from traditional business acumen to modern AI and blockchain technologies. The page concludes with a call-to-action encouraging visitors to connect for potential projects or collaborations. Keywords: ['about', 'biography', 'sales-leadership', 'NFT-development', 'AI-expertise', 'professional-background', 'skills-showcase']. component_type: ['page', 'biographical']. functionality: ['Presents comprehensive professional biography with animated sections and skill demonstrations']. use_case: ['Personal branding', 'Professional introduction', 'Skill showcase', 'Client relationship building']. related_files: ['src/pages/Projects.jsx', 'src/pages/Connect.jsx', 'src/components/SEO.jsx']",
  "src/utils/SitemapGenerator.js": "This utility class provides comprehensive sitemap generation and search engine submission functionality for the website. It creates XML sitemaps for both regular pages and images, manages sitemap indexes, and handles automatic submission to major search engines like Google and Bing. The class includes methods for adding URLs with custom priorities and change frequencies, generating structured XML output, creating image sitemaps with captions and titles, and implementing IndexNow protocol for rapid search engine indexing. It supports dynamic content integration and provides feedback on submission success rates to various search engine APIs. Keywords: ['sitemap', 'XML', 'SEO', 'search-engines', 'Google', 'Bing', 'IndexNow', 'URL-submission']. component_type: ['utility', 'SEO']. functionality: ['Generates comprehensive XML sitemaps and handles automatic submission to search engines with success tracking']. use_case: ['SEO sitemap generation', 'Search engine submission', 'URL indexing', 'Site structure mapping']. related_files: ['src/components/SEO.jsx', 'src/utils/performance.js', 'public/sitemap.xml']",
  "src/components/settings/CDNSettings.jsx": "This file contains a React component for managing Content Delivery Network (CDN) settings in an admin interface. The component provides comprehensive CDN configuration options including provider selection (Cloudflare, Bunny.net, KeyCDN, AWS CloudFront), authentication credentials, cache settings, and feature toggles for image optimization and compression. It includes real-time connection testing, cache purging functionality, and displays CDN statistics and status indicators. The interface is built with a modern dark theme using Tailwind CSS and includes interactive elements like toggles, dropdowns, and buttons for managing CDN operations. Keywords: ['CDN', 'content delivery network', 'cache management', 'image optimization', 'compression', 'Cloudflare', 'AWS', 'performance', 'global distribution', 'API integration']. component_type: ['functional']. functionality: ['Manages CDN provider configuration and settings with real-time monitoring and control features']. use_case: ['CDN provider setup and configuration', 'Performance optimization settings', 'Cache management and purging', 'Global content distribution setup']. related_files: ['src/components/settings/PerformanceSettings.jsx', 'src/utils/CDNUtils.js', 'src/contexts/SettingsContext.jsx']",
  "src/pages/admin/AdminUsers.jsx": "Admin user management page that provides comprehensive user control including adding, editing, deleting users, managing roles and permissions, and handling MFA settings. This component allows administrators to manage all user accounts with different access levels and security features. Keywords: ['admin', 'users', 'management', 'roles', 'permissions', 'MFA']. component_type: ['admin', 'management']. functionality: ['Provides complete user management interface with CRUD operations, role assignment, and security controls']. use_case: ['User administration', 'Access control', 'Security management', 'Role assignment']. related_files: ['src/components/AdminLayout.jsx', 'src/utils/TwoFactorAuth.js', 'src/components/MFASetup.jsx']",
  "src/components/ScrollAnimation3D.jsx": "This file creates an immersive 3D scroll-based animation system that responds to user scroll interactions throughout the page. The component uses Framer Motion's scroll-triggered animations to create floating tech elements, geometric shapes, binary code displays, and network connection visualizations that move and transform based on scroll position. It includes parallax effects, rotating elements, data stream animations, and a scroll progress indicator. The animations create a dynamic, tech-focused visual experience that enhances the overall user interface with smooth transitions and engaging visual feedback. All animations are optimized for performance and include proper cleanup to prevent memory leaks. Keywords: ['scroll animation', '3D effects', 'parallax', 'Framer Motion', 'interactive design', 'tech visualization', 'geometric shapes', 'data streams', 'scroll progress', 'visual effects']. component_type: ['UI', 'functional']. functionality: ['Creates scroll-responsive 3D animations and visual effects that enhance user interface engagement']. use_case: ['Landing page animations', 'Interactive scroll experiences', 'Tech-themed visual enhancements', 'User engagement improvements']. related_files: ['src/components/Hero.jsx', 'src/pages/Home.jsx', 'src/components/Layout.jsx']",
  "src/pages/admin/SecuritySettings.jsx": "This file contains the SecuritySettings component for the admin panel, which manages security configurations including password management, two-factor authentication, security monitoring, and audit logging. It provides a comprehensive security center with real-time monitoring, security scans, and detailed security event logging. The component handles password changes, MFA toggling, security settings updates, and displays security activity logs. Keywords: ['security', 'authentication', 'password', 'two-factor', 'audit', 'monitoring']. component_type: ['UI']. functionality: ['Manages security settings and configurations for the admin panel with real-time monitoring and audit logging']. use_case: ['Admin security management', 'Password policy configuration', 'Two-factor authentication setup']. related_files: ['src/contexts/AdminContext.jsx', 'src/utils/SecurityUtils.js', 'src/components/MFASetup.jsx']",
  "src/utils/UserPermissions.js": "This file contains a comprehensive user permissions and role-based access control system for the admin panel. It defines different user roles (Root Admin, Admin, Editor, Author, Contributor, Viewer) with specific permissions for various system features like dashboard access, user management, blog management, settings, and AI tools. The system provides methods to check user permissions, validate role assignments, and manage user access levels. It includes detailed permission descriptions and middleware functions for route protection. This is essential for maintaining security and proper access control throughout the application. Keywords: ['permissions', 'roles', 'access-control', 'security', 'admin', 'user-management', 'authorization']. component_type: ['utility']. functionality: ['Manages user roles and permissions with hierarchical access control for different system features']. use_case: ['User role assignment', 'Permission checking', 'Access control validation', 'Admin panel security']. related_files: ['src/contexts/AdminContext.jsx', 'src/components/UserManagement.jsx', 'src/pages/admin/Dashboard.jsx']",
  "src/components/SecurityHeaders.jsx": "This React component implements client-side security measures including Content Security Policy (CSP), security headers, XSS monitoring, clickjacking protection, and CSRF token management. It provides components for applying security headers via meta tags, monitoring potential security threats, and creating secure forms with CSRF protection. The component includes real-time security monitoring that detects suspicious patterns and mixed content issues. It's designed to enhance the application's security posture by implementing multiple layers of protection against common web vulnerabilities. Keywords: ['security', 'CSP', 'XSS', 'CSRF', 'clickjacking', 'headers', 'protection']. component_type: ['security']. functionality: ['Implements comprehensive client-side security measures and threat monitoring']. use_case: ['Security header implementation', 'XSS protection', 'CSRF token management', 'Security monitoring']. related_files: ['src/config/SecurityConfig.js', 'src/components/SecureForm.jsx', 'src/utils/SecurityUtils.js']",
  "src/components/DashboardStats.jsx": "This React component displays key statistics and metrics on the admin dashboard in an animated, visually appealing card layout. It shows important blog metrics like total posts, published posts, total views, and monthly analytics with trend indicators and change percentages. The component uses Framer Motion for smooth animations and Lucide React icons for visual enhancement. Each stat card has a gradient background and hover effects to create an engaging user interface. This component is crucial for providing administrators with quick insights into their blog's performance at a glance. Keywords: ['dashboard', 'statistics', 'metrics', 'analytics', 'admin', 'blog-stats', 'performance']. component_type: ['UI']. functionality: ['Displays animated dashboard statistics and key performance metrics for blog management']. use_case: ['Admin dashboard overview', 'Performance monitoring', 'Blog analytics display', 'Quick metrics visualization']. related_files: ['src/contexts/AdminContext.jsx', 'src/pages/admin/Dashboard.jsx', 'src/utils/AnalyticsManager.js']",
  "src/utils/AnalyticsManager.js": "This comprehensive analytics management system provides privacy-first analytics tracking with support for multiple providers like Plausible, Simple Analytics, Fathom, and Umami. It implements cookieless tracking, respects Do Not Track preferences, and includes automatic page view tracking, performance monitoring (Core Web Vitals), error tracking, and user engagement metrics. The system provides detailed analytics data collection while maintaining user privacy and GDPR compliance. It includes session management, event tracking, goal conversion tracking, and data export capabilities for comprehensive website analytics. Keywords: ['analytics', 'privacy', 'tracking', 'performance', 'GDPR', 'cookieless', 'web-vitals']. component_type: ['utility']. functionality: ['Manages privacy-compliant analytics tracking with multiple provider support and comprehensive metrics collection']. use_case: ['Website analytics', 'Performance monitoring', 'User behavior tracking', 'Privacy-compliant data collection']. related_files: ['src/components/DashboardStats.jsx', 'src/pages/admin/Analytics.jsx', 'src/contexts/AdminContext.jsx']",
  "src/pages/admin/BlogEditor.jsx": "BlogEditor component provides a comprehensive interface for creating and editing construction management articles with SEO optimization features. It includes form fields for title, excerpt, content, category selection, image management, and advanced SEO settings including target keywords and meta descriptions. The component integrates with the admin context for data management and includes auto-generation features for SEO fields. Keywords: ['blog editor', 'article creation', 'SEO optimization', 'construction content']. component_type: ['functional', 'UI']. functionality: ['Provides full-featured article creation and editing interface with SEO optimization tools']. use_case: ['Admin article management', 'content creation', 'SEO-optimized publishing']. related_files: ['src/contexts/AdminContext.jsx', 'src/pages/admin/BlogManager.jsx']",
  "src/middleware/SecurityMiddleware.jsx": "This file contains a comprehensive security middleware collection that provides essential security features for web applications. It implements multiple layers of protection including rate limiting to prevent abuse, input validation and sanitization to protect against malicious data, CSRF protection to prevent cross-site request forgery attacks, secure file upload handling, authentication and authorization middleware, and various utility methods for token generation and verification. The middleware is designed to be modular and can be applied to different routes based on security requirements. Keywords: ['security', 'middleware', 'rate-limiting', 'CSRF', 'authentication', 'validation', 'XSS-protection']. component_type: ['middleware']. functionality: ['Provides comprehensive security protection for web applications through various middleware functions including rate limiting, input validation, CSRF protection, and authentication']. use_case: ['Protecting API endpoints from abuse', 'Validating and sanitizing user input', 'Implementing authentication and authorization', 'Securing file uploads']. related_files: ['src/config/SecurityConfig.js', 'src/utils/TwoFactorAuth.js']",
  "src/pages/Projects.jsx": "This file displays a comprehensive portfolio of projects including NFT collections, AI tools, and business solutions. It showcases Dan Pearson's technical expertise across multiple domains with detailed project cards featuring images, descriptions, and technology stacks. The page uses modern animations and responsive design to create an engaging user experience. Keywords: ['projects', 'portfolio', 'NFT', 'AI', 'blockchain', 'development']. Component type: ['UI', 'page']. Functionality: ['Displays project portfolio with filtering and detailed project information']. Use case: ['Portfolio showcase', 'project demonstration', 'client presentation']. Related files: ['src/App.jsx', 'src/components/Navbar.jsx']",
  "src/utils/SearchEngineUtils.js": "This utility class provides comprehensive search engine optimization and submission tools for improving website visibility and search rankings. It includes functionality for submitting sitemaps to major search engines like Google and Bing, implementing IndexNow for instant indexing, generating robots.txt files with AI scraper blocking capabilities, setting up search console verification, configuring analytics tracking, and managing social media meta tags for better sharing. The class handles both privacy-focused analytics and traditional tracking solutions while providing monitoring capabilities for search engine crawlers. Keywords: ['SEO', 'search-engines', 'sitemap', 'robots-txt', 'analytics', 'meta-tags', 'IndexNow']. component_type: ['utility']. functionality: ['Manages search engine optimization tasks including sitemap submission, analytics setup, and social media meta tag generation']. use_case: ['Improving search engine visibility', 'Setting up website analytics', 'Optimizing social media sharing', 'Managing search engine submissions']. related_files: ['src/utils/WebVitals.js', 'src/config/SEOConfig.js']",
  "src/utils/WebVitals.js": "This utility class provides comprehensive monitoring and optimization for Core Web Vitals and website performance metrics. It tracks essential performance indicators including Largest Contentful Paint (LCP), First Input Delay (FID), Cumulative Layout Shift (CLS), Interaction to Next Paint (INP), Time to First Byte (TTFB), and First Contentful Paint (FCP). The class uses Performance Observer API to collect real-time metrics, provides performance ratings based on Google's thresholds, sends data to analytics services, and includes optimization methods for improving Core Web Vitals scores. It's essential for maintaining good search engine rankings and user experience. Keywords: ['web-vitals', 'performance', 'LCP', 'FID', 'CLS', 'monitoring', 'optimization', 'analytics']. component_type: ['utility']. functionality: ['Monitors and reports Core Web Vitals metrics while providing optimization recommendations for better website performance']. use_case: ['Performance monitoring and optimization', 'SEO improvement through better Core Web Vitals', 'User experience enhancement', 'Analytics and reporting']. related_files: ['src/utils/SearchEngineUtils.js', 'src/utils/TestingSuite.js']",
  "src/utils/TwoFactorAuth.js": "Two-factor authentication utility class that handles TOTP generation, QR code creation, token verification, and backup code management. This file provides all the necessary functions for implementing MFA security features in the admin system. It includes methods for generating secrets, creating QR codes for authenticator apps, verifying tokens, and managing backup codes. Keywords: ['MFA', 'TOTP', '2FA', 'authentication', 'security', 'QR-code']. component_type: ['utility']. functionality: ['Provides comprehensive two-factor authentication functionality including secret generation, token verification, and backup code management']. use_case: ['User authentication', 'Security enhancement', 'MFA setup', 'Token validation']. related_files: ['src/pages/admin/AdminUsers.jsx', 'src/components/MFASetup.jsx']",
  "src/utils/TestingSuite.js": "This comprehensive testing suite provides automated testing capabilities for pre-migration validation and ongoing website quality assurance. It includes tests for redirect functionality, performance metrics, security vulnerabilities, cross-browser compatibility, accessibility compliance, and SEO optimization. The suite can test redirect chains, measure Core Web Vitals, validate security headers, check for XSS and SQL injection vulnerabilities, verify browser feature support, and ensure proper meta tags and structured data. It generates detailed reports with recommendations for improvements and is essential for maintaining website quality during migrations and updates. Keywords: ['testing', 'automation', 'redirects', 'performance', 'security', 'accessibility', 'SEO', 'migration']. component_type: ['utility']. functionality: ['Provides comprehensive automated testing for website quality, security, and performance with detailed reporting and recommendations']. use_case: ['Pre-migration testing and validation', 'Ongoing quality assurance', 'Performance monitoring', 'Security vulnerability assessment']. related_files: ['src/utils/WebVitals.js', 'src/utils/SearchEngineUtils.js', 'src/middleware/SecurityMiddleware.jsx']",
  "src/components/ProjectCard.jsx": "This React component renders individual project cards within the projects portfolio page. Each card displays project information including title, description, image, technology tags, and a call-to-action button. The component uses Framer Motion for smooth entrance animations with staggered delays, creating an engaging visual experience. The card features a hover effect that scales the image and changes border colors, along with a gradient overlay for better text readability. The design follows a dark theme with blue accent colors and includes responsive styling for different screen sizes. Keywords: ['project-card', 'React', 'Framer-Motion', 'portfolio', 'responsive', 'hover-effects', 'animations']. component_type: ['UI']. functionality: ['Displays individual project information in an attractive card format with animations and interactive hover effects']. use_case: ['Showcasing individual projects in portfolio', 'Creating engaging project presentations', 'Displaying project metadata and tags']. related_files: ['src/pages/Projects.jsx', 'src/components/Card.jsx']",
  "src/components/ImageOptimizer.jsx": "This component provides advanced image optimization functionality for web applications. It handles multiple image formats including WebP and AVIF for modern browsers, implements lazy loading with Intersection Observer API for performance, and generates responsive image sets for different screen sizes. The component automatically preloads critical images marked with priority flag, provides fallback handling for failed image loads, and includes performance monitoring for Largest Contentful Paint metrics. It serves as a comprehensive solution for delivering optimized images across various devices and network conditions. Keywords: ['image optimization', 'lazy loading', 'responsive images', 'WebP', 'AVIF', 'performance']. component_type: ['UI', 'performance']. functionality: ['Optimizes images for web delivery with multiple format support and lazy loading capabilities']. use_case: ['Hero images', 'gallery components', 'blog post images', 'product photos']. related_files: ['src/hooks/useImageOptimization.js', 'src/utils/PerformanceMonitor.js']",
  "src/components/AIIntegration.jsx": "This component provides AI-powered content generation capabilities integrated into the application. It offers multiple AI model selection including GPT-4, Claude 3, and Gemini Pro, with customizable prompts and content templates for different use cases. The component simulates AI API interactions for generating blog content, titles, SEO descriptions, and excerpts with realistic response times and model-specific outputs. It includes copy-to-clipboard functionality, content preview, and seamless integration with existing content management workflows. This serves as a comprehensive AI assistant for content creators and marketers. Keywords: ['AI integration', 'content generation', 'GPT-4', 'Claude', 'Gemini', 'automation']. component_type: ['functional', 'AI']. functionality: ['Generates AI-powered content using various language models with customizable prompts and templates']. use_case: ['Blog post creation', 'SEO content generation', 'marketing copy', 'content ideation']. related_files: ['src/components/admin/BlogEditor.jsx', 'src/contexts/AdminContext.jsx']",
  "src/utils/PerformanceMonitor.js": "This utility class provides comprehensive website performance monitoring and optimization capabilities. It tracks resource loading times, navigation metrics, memory usage, and network conditions using modern browser APIs like PerformanceObserver and Navigator Connection. The system automatically detects slow resources, high memory usage, and adapts to network conditions by adjusting image quality and animations. It includes error monitoring for JavaScript exceptions and unhandled promise rejections, generates performance reports with actionable recommendations, and integrates with analytics services for data collection. This serves as a complete performance monitoring solution for web applications. Keywords: ['performance monitoring', 'web vitals', 'resource optimization', 'memory tracking', 'analytics']. component_type: ['utility', 'performance']. functionality: ['Monitors website performance metrics and provides optimization recommendations based on real-time data']. use_case: ['Performance optimization', 'user experience monitoring', 'resource analysis', 'error tracking']. related_files: ['src/components/ImageOptimizer.jsx', 'src/hooks/useImageOptimization.js']",
  "src/components/settings/SEOSettings.jsx": "This component provides a comprehensive SEO configuration interface for website administrators. It allows management of basic SEO settings like site name, description, and default social media images, along with search engine integration for Google Analytics, Search Console, and Bing Webmaster Tools. The component includes technical SEO controls for XML sitemap generation, robots.txt configuration, and AI crawler blocking. It features real-time status indicators, connection testing capabilities, and automated sitemap generation functionality. This serves as a centralized control panel for all SEO-related website settings and optimizations. Keywords: ['SEO settings', 'search engine optimization', 'Google Analytics', 'sitemap', 'meta tags']. component_type: ['settings', 'SEO']. functionality: ['Provides administrative interface for configuring SEO settings and search engine integrations']. use_case: ['SEO optimization', 'search engine setup', 'meta tag management', 'sitemap configuration']. related_files: ['public/sitemap.xml', 'src/contexts/AdminContext.jsx']",
  "src/pages/BlogPost.jsx": "This page component renders individual blog posts with full content display and enhanced user experience features. It dynamically loads blog posts based on URL slugs, displays formatted content with proper typography and styling, and includes metadata like publication date, reading time, and categories. The component features responsive design, social sharing capabilities, view tracking, and related content suggestions. It also includes a newsletter subscription section and handles error states for non-existent posts. This serves as the primary blog post viewing interface with comprehensive content presentation and user engagement features. Keywords: ['blog post', 'content display', 'responsive design', 'social sharing', 'newsletter']. component_type: ['page', 'content']. functionality: ['Displays individual blog posts with full content, metadata, and user engagement features']. use_case: ['Blog reading', 'content consumption', 'article sharing', 'user engagement']. related_files: ['src/contexts/AdminContext.jsx', 'src/pages/News.jsx', 'src/components/admin/BlogEditor.jsx']",
  "public/sitemap.xml": "This XML sitemap file provides search engines with a structured map of all important pages on the website for better crawling and indexing. It includes main navigation pages like home, about, projects, news, and AI tools, along with individual blog post URLs with their respective priorities and update frequencies. The sitemap follows the standard XML sitemap protocol with proper lastmod dates, changefreq indicators, and priority values to help search engines understand the site structure and content importance. This file is automatically referenced by search engines and helps improve SEO visibility and crawling efficiency. Keywords: ['XML sitemap', 'SEO', 'search engine crawling', 'site structure', 'indexing']. component_type: ['SEO', 'configuration']. functionality: ['Provides search engines with structured website navigation and content hierarchy information']. use_case: ['SEO optimization', 'search engine indexing', 'site crawling', 'content discovery']. related_files: ['src/components/settings/SEOSettings.jsx', 'public/robots.txt']",
  "src/pages/admin/AdminSettings.jsx": "Updated admin settings page to integrate with persistent storage system for real-time settings management with automatic saving and proper data persistence across sessions. Keywords: ['admin-settings', 'persistence', 'storage', 'configuration']. component_type: ['admin', 'settings']. functionality: ['Provides comprehensive admin settings interface with persistent storage integration']. use_case: ['Managing system configuration with automatic persistence', 'Real-time settings updates across admin sessions']. related_files: ['src/utils/StorageManager.js', 'src/utils/SettingsStorage.js', 'src/contexts/AdminContext.jsx']",
  "src/pages/admin/BlogManager.jsx": "BlogManager component provides a comprehensive interface for managing construction management articles with search, filtering, and sorting capabilities. It displays articles in a list format with status indicators, SEO keyword tags, and action buttons for editing, viewing, and deleting. The component integrates with the admin context for data management and includes responsive design for various screen sizes. Keywords: ['blog management', 'article administration', 'content management', 'construction articles']. component_type: ['functional', 'UI']. functionality: ['Provides complete article management interface with search, filter, and CRUD operations']. use_case: ['Admin content management', 'article organization', 'construction content oversight']. related_files: ['src/contexts/AdminContext.jsx', 'src/pages/admin/BlogEditor.jsx']",
  "src/config/SecurityConfig.jsx": "This is a comprehensive security configuration file that defines security policies, headers, and settings for the entire application. The configuration includes SSL/TLS settings with modern cipher suites, Content Security Policy (CSP) directives for preventing XSS attacks, security headers for protection against various web vulnerabilities, rate limiting configurations for different endpoints, file upload security restrictions, session management settings, CSRF protection, password policies, and API security configurations. The file provides environment-specific overrides and serves as the central security policy definition for the application. Keywords: ['security', 'CSP', 'SSL', 'TLS', 'headers', 'rate-limiting', 'CSRF', 'session', 'password-policy', 'API-security']. component_type: ['configuration', 'security']. functionality: ['Defines comprehensive security policies and configurations including CSP, security headers, rate limiting, and authentication settings for application-wide security enforcement']. use_case: ['Security policy definition', 'Web vulnerability protection', 'Authentication configuration', 'API security setup']. related_files: ['src/utils/SecurityUtils.js', 'src/middleware/SecurityMiddleware.js', 'src/pages/admin/AdminSettings.jsx']",
  "src/utils/MonitoringSystem.js": "This is a sophisticated monitoring system utility that implements comprehensive application performance monitoring, error tracking, uptime monitoring, and security threat detection. The system tracks Core Web Vitals (LCP, FID, CLS), real user monitoring metrics, JavaScript errors, network failures, and security threats in real-time. It includes automated alerting mechanisms, performance scoring, periodic reporting to external services, and detailed analytics collection. The monitoring system provides uptime checks for critical endpoints, tracks user interactions, monitors for suspicious activities like XSS attempts, and generates comprehensive reports for system health analysis. Keywords: ['monitoring', 'performance', 'core-web-vitals', 'error-tracking', 'uptime', 'security', 'analytics', 'alerting', 'RUM', 'observability']. component_type: ['utility', 'monitoring', 'performance']. functionality: ['Implements comprehensive application monitoring including performance metrics, error tracking, uptime monitoring, and security threat detection with automated alerting and reporting capabilities']. use_case: ['Performance monitoring', 'Error tracking', 'Uptime monitoring', 'Security monitoring', 'System health analysis']. related_files: ['src/pages/admin/AdminSettings.jsx', 'src/hooks/usePerformanceMonitoring.js', 'src/components/admin/MonitoringDashboard.jsx']",
  "src/components/Navbar.jsx": "This is a responsive navigation component that provides the main site navigation with smooth animations and mobile-friendly design. The component features a fixed-position navbar with backdrop blur effects, responsive design that adapts to different screen sizes, and active link highlighting based on the current route. It includes a mobile hamburger menu with smooth animations, gradient text branding, and admin access link for authenticated users. The navigation supports both desktop and mobile layouts with appropriate touch targets and accessibility considerations. Keywords: ['navigation', 'navbar', 'responsive', 'mobile-menu', 'routing', 'animation', 'branding', 'accessibility']. component_type: ['UI', 'navigation', 'layout']. functionality: ['Provides responsive site navigation with mobile menu, active link highlighting, and smooth animations for enhanced user experience across all device sizes']. use_case: ['Site navigation', 'Mobile responsive design', 'User interface layout', 'Route-based navigation']. related_files: ['src/components/Layout.jsx', 'src/App.jsx', 'src/components/MobileMenu.jsx']",
  "src/components/settings/AnalyticsSettings.jsx": "This is a specialized settings component for configuring privacy-first analytics and visitor tracking systems. The component provides interfaces for selecting analytics providers (Plausible, Simple Analytics, Fathom, Umami), configuring tracking settings, managing privacy options like Do Not Track respect and IP anonymization, and testing analytics connections. It includes provider comparison with privacy ratings, configuration forms for tracking IDs and domains, comprehensive privacy controls, and real-time analytics status monitoring. The interface emphasizes privacy-first analytics solutions and provides visual feedback for configuration status and recent analytics data. Keywords: ['analytics', 'privacy', 'tracking', 'GDPR', 'cookieless', 'plausible', 'configuration', 'monitoring', 'data-protection']. component_type: ['functional', 'settings', 'privacy']. functionality: ['Provides comprehensive analytics configuration interface with privacy-first options, provider selection, and real-time status monitoring for visitor tracking systems']. use_case: ['Analytics setup', 'Privacy configuration', 'GDPR compliance', 'Visitor tracking management']. related_files: ['src/pages/admin/AdminSettings.jsx', 'src/utils/AnalyticsUtils.js', 'src/hooks/useAnalytics.js']",
  "src/hooks/useImageOptimization.js": "This is a custom React hook that provides comprehensive image optimization capabilities including format detection, responsive image generation, and performance optimization features. The hook detects browser support for modern image formats (WebP, AVIF), generates optimized URLs with CDN integration, creates responsive srcsets for different screen sizes, provides image preloading functionality, and calculates optimal dimensions while maintaining aspect ratios. It includes integration points for image CDNs like Cloudinary or ImageKit and provides utilities for improving Core Web Vitals through optimized image delivery. Keywords: ['image-optimization', 'WebP', 'AVIF', 'responsive-images', 'CDN', 'performance', 'srcset', 'preloading', 'aspect-ratio']. component_type: ['hook', 'utility', 'performance']. functionality: ['Provides comprehensive image optimization capabilities including format detection, responsive image generation, CDN integration, and performance optimization for improved loading times']. use_case: ['Image optimization', 'Performance improvement', 'Responsive design', 'CDN integration', 'Core Web Vitals optimization']. related_files: ['src/components/OptimizedImage.jsx', 'src/utils/ImageUtils.js', 'src/hooks/usePerformance.js']",
  "src/components/StructuredData.jsx": "This component handles structured data (JSON-LD) generation for SEO optimization across the website. It creates comprehensive schema markup for different content types including person, organization, website, article, and creative work schemas. The component dynamically generates appropriate structured data based on the content type and integrates with React Helmet for proper head tag management. It includes detailed schemas for Dan Pearson's professional profile, business information, and content metadata to enhance search engine understanding and rich snippet display. Keywords: ['SEO', 'structured-data', 'schema-markup', 'JSON-LD', 'search-optimization']. component_type: ['SEO', 'utility']. functionality: ['Generates structured data markup for different content types to improve SEO and search engine understanding']. use_case: ['SEO optimization', 'Rich snippets generation', 'Search engine markup', 'Content metadata']. related_files: ['src/components/SEOHead.jsx', 'src/hooks/useSEO.js', 'src/utils/seoUtils.js']",
  "src/pages/admin/AITools.jsx": "This administrative page provides a comprehensive interface for managing AI integration settings within the content management system. It allows administrators to configure API keys for multiple AI providers including OpenAI, Claude, and Google Gemini, test connections, and adjust generation parameters like temperature and token limits. The component includes features for enabling auto-SEO generation, content optimization, and multi-language support, along with usage statistics tracking and connection status monitoring. It serves as the central hub for AI-powered content creation configuration. Keywords: ['AI-integration', 'admin-panel', 'API-configuration', 'content-generation', 'OpenAI', 'Claude', 'Gemini']. component_type: ['admin', 'configuration']. functionality: ['Manages AI provider settings, API keys, and content generation parameters for automated content creation']. use_case: ['AI configuration', 'Content automation setup', 'API key management', 'AI model selection']. related_files: ['src/contexts/AdminContext.jsx', 'src/utils/aiService.js', 'src/pages/admin/Dashboard.jsx']",
  "src/hooks/useWebVitals.js": "This custom React hook provides comprehensive web performance monitoring by integrating with the Core Web Vitals measurement system. It tracks essential performance metrics including Largest Contentful Paint (LCP), First Input Delay (FID), and Cumulative Layout Shift (CLS) to provide real-time performance insights. The hook automatically initializes performance monitoring, applies optimization techniques, and calculates an overall performance score based on metric ratings. It's essential for maintaining optimal website performance and user experience monitoring. Keywords: ['web-vitals', 'performance-monitoring', 'LCP', 'FID', 'CLS', 'optimization']. component_type: ['hook', 'performance']. functionality: ['Monitors Core Web Vitals metrics and provides performance optimization insights for better user experience']. use_case: ['Performance monitoring', 'Web vitals tracking', 'Site optimization', 'User experience measurement']. related_files: ['src/utils/WebVitals.js', 'src/pages/admin/Analytics.jsx', 'src/components/PerformanceMonitor.jsx']",
  "src/pages/admin/AdminLogin.jsx": "This is a secure admin login page component that provides authentication functionality for the admin dashboard. The component includes email and password login fields, password visibility toggle, forgot password functionality, and form validation using React Hook Form. It features modern UI design with animations, loading states, and proper error handling. The login integrates with Supabase authentication service and includes demo credentials for testing. The component also provides navigation back to the main site and responsive design for all devices. Keywords: ['admin login', 'authentication', 'form validation', 'password reset', 'supabase auth']. component_type: ['functional', 'authentication']. functionality: ['Provides secure admin authentication with email/password login and password reset functionality']. use_case: ['Admin access control', 'secure dashboard entry', 'user authentication']. related_files: ['src/contexts/AdminContext.jsx', 'src/utils/SupabaseAuthService.js', 'src/pages/admin/AdminDashboard.jsx']",
  "src/components/ImageUpload.jsx": "This versatile component handles image upload functionality for the content management system, supporting both file uploads and URL-based image additions. It provides a drag-and-drop interface for local file uploads with validation for file types and sizes, while also allowing users to add images directly from URLs. The component includes upload progress indication, file type validation, and simulates cloud storage integration for demo purposes. It's essential for content creation workflows where images need to be added to blog posts or project descriptions. Keywords: ['image-upload', 'file-handling', 'drag-drop', 'content-management', 'media-upload']. component_type: ['utility', 'UI']. functionality: ['Handles image uploads through drag-and-drop or URL input with validation and progress tracking']. use_case: ['Content creation', 'Blog image upload', 'Media management', 'File handling']. related_files: ['src/pages/admin/BlogEditor.jsx', 'src/components/MediaLibrary.jsx', 'src/utils/fileUtils.js']",
  "src/utils/RedirectManager.js": "This comprehensive utility class manages 301 redirects and URL mapping for the website, ensuring proper SEO preservation during site migrations or URL changes. It handles various types of redirects including static mappings, category redirects, tag redirects, and media file redirects with support for wildcard patterns. The system includes redirect validation to prevent chains and loops, performance monitoring, analytics tracking, and bulk testing capabilities. It's crucial for maintaining SEO rankings and providing seamless user experience when URLs change. Keywords: ['redirects', '301-redirects', 'URL-mapping', 'SEO-preservation', 'migration', 'analytics']. component_type: ['utility', 'SEO']. functionality: ['Manages comprehensive redirect system with validation, monitoring, and analytics for SEO preservation']. use_case: ['Site migration', 'URL management', 'SEO preservation', 'Redirect monitoring']. related_files: ['src/utils/seoUtils.js', 'src/pages/admin/SEOSettings.jsx', 'src/hooks/useSEO.js']",
  "src/components/CMSIntegration.jsx": "This component provides a comprehensive interface for integrating headless Content Management Systems (CMS) with the portfolio website. It allows users to select from popular CMS options like Sanity, Contentful, and Strapi, configure their API credentials, test connections, and set up automated webhooks for content synchronization. The component includes detailed configuration forms for each CMS type, connection status monitoring, and build trigger functionality to automatically update the website when content changes. It serves as a central hub for managing all CMS-related operations and ensures seamless content delivery from external systems to the portfolio. Keywords: ['CMS', 'integration', 'headless', 'API', 'webhooks', 'content management', 'Sanity', 'Contentful', 'Strapi']. component_type: ['functional']. functionality: ['Manages headless CMS integrations with configuration, testing, and webhook setup capabilities']. use_case: ['Setting up CMS connections', 'Configuring content APIs', 'Managing automated builds', 'Content synchronization']. related_files: ['src/hooks/useCMS.js', 'src/utils/cms-helpers.js', 'src/components/AdminLayout.jsx']",
  "src/components/AdminLayout.jsx": "This component serves as the main layout wrapper for the administrative dashboard of the portfolio website. It provides a responsive sidebar navigation with menu items for different admin sections, user authentication status display, and a collapsible mobile-friendly interface. The layout includes navigation to dashboard, blog management, store (coming soon), AI tools (coming soon), security settings, and general settings. It handles user logout functionality and displays the current user's information with avatar and role details. The component ensures consistent styling and navigation across all admin pages while maintaining responsive design principles. Keywords: ['admin', 'layout', 'navigation', 'sidebar', 'responsive', 'dashboard', 'authentication']. component_type: ['layout']. functionality: ['Provides the main administrative interface layout with navigation and user management']. use_case: ['Admin dashboard navigation', 'User session management', 'Responsive admin interface', 'Administrative page wrapper']. related_files: ['src/contexts/AdminContext.jsx', 'src/components/Dashboard.jsx', 'src/components/BlogManager.jsx']",
  "src/components/MFASetup.jsx": "This component implements a comprehensive Multi-Factor Authentication (MFA) setup wizard for enhanced account security. It guides users through a step-by-step process including introduction, QR code generation for authenticator apps, verification testing, and backup code generation. The component supports popular authenticator apps like Google Authenticator and Authy, provides manual entry options, and generates downloadable backup codes for account recovery. It includes real-time code validation, time-based token refresh indicators, and secure secret key management. The interface is designed with clear visual feedback and security warnings to ensure users understand the importance of MFA setup. Keywords: ['MFA', 'two-factor', 'authentication', 'security', 'QR code', 'backup codes', 'TOTP', 'authenticator']. component_type: ['functional']. functionality: ['Manages multi-factor authentication setup with QR codes, verification, and backup code generation']. use_case: ['Account security enhancement', 'MFA enrollment', 'Security settings configuration', 'User authentication management']. related_files: ['src/utils/TwoFactorAuth.js', 'src/contexts/UserContext.jsx', 'src/components/SecuritySettings.jsx']",
  "src/components/NewsCard.jsx": "This is a reusable React component that renders individual news article cards with modern styling and animations. The component displays article information including title, excerpt, category, date, and featured image in an attractive card layout. It uses Framer Motion for smooth entrance animations and hover effects, creating an engaging user experience. The card includes visual elements like category badges, publication dates, and call-to-action buttons. Keywords: ['news card', 'article component', 'framer motion', 'responsive design']. component_type: ['UI']. functionality: ['Displays individual news articles in a card format with animations and hover effects']. use_case: ['News listings', 'blog post previews', 'content showcases']. related_files: ['src/pages/News.jsx', 'src/pages/admin/BlogManager.jsx']",
  "src/contexts/UserContext.jsx": "User context provider that manages user authentication, MFA setup, and user CRUD operations. This file serves as the central state management for all user-related functionality including two-factor authentication, login/logout, and user management operations. It integrates with the TwoFactorAuth utility to provide secure MFA capabilities and maintains security logs for all user activities. Keywords: ['user management', 'authentication', 'MFA', 'context provider', 'security']. component_type: ['functional']. functionality: ['Manages user state and authentication operations with MFA support']. use_case: ['User authentication', 'Admin user management', 'Security logging']. related_files: ['src/utils/TwoFactorAuth.js', 'src/components/MFASetup.jsx', 'src/pages/admin/UserManagement.jsx']",
  "src/pages/News.jsx": "This file contains the News page component that displays a comprehensive list of technology and business news articles from July and June 2025. The page features a modern, responsive design with a hero section, article grid layout, and subscription form. Each article includes relevant information such as title, excerpt, category, publication date, and featured image. The articles cover various topics including AI automation, NFT utility, blockchain security, sales performance, Web3 integration, sustainability, DeFi, content creation, VR meetings, smart contracts, customer experience, IoT, digital identity, business automation, and social commerce. The component uses Framer Motion for smooth animations and maintains consistency with the overall site design through Tailwind CSS styling. Keywords: ['news', 'articles', 'technology', 'AI', 'blockchain', 'NFT', 'business', 'July 2025', 'June 2025', 'insights', 'trends', 'innovation']. component_type: ['UI']. functionality: ['Displays a grid of news articles with filtering and animation capabilities for technology and business content']. use_case: ['Technology news portal', 'Business insights platform', 'Industry trend showcase', 'Content marketing hub']. related_files: ['src/components/NewsCard.jsx', 'src/App.jsx']",
  "src/pages/Home.jsx": "This file contains the main homepage component for Dan Pearson's portfolio website. It serves as the landing page featuring a hero section with 3D background, personal introduction, service previews, and call-to-action sections. The component showcases Dan's expertise in sales leadership, NFT development, and AI integration through animated sections and interactive elements. It includes navigation to other pages and provides an engaging first impression for visitors. Keywords: ['homepage', 'hero', 'portfolio', 'landing', 'services', '3D', 'animation']. component_type: ['layout']. functionality: ['Displays the main landing page with hero section, services preview, and call-to-action areas']. use_case: ['First page visitors see', 'Main entry point to portfolio', 'Overview of services and expertise']. related_files: ['src/components/Scene3D.jsx', 'src/App.jsx', 'src/components/Navbar.jsx']",
  "src/components/AdminRoute.jsx": "This is a protected route component that handles authentication and access control for the admin section of the website. It checks if a user is authenticated through the AdminContext and either renders the admin content within an AdminLayout or redirects unauthenticated users to the login page. This component acts as a security gateway ensuring only authorized users can access administrative features and content management areas. It integrates with React Router for navigation and uses the admin context for state management of authentication status. The component follows the higher-order component pattern to wrap admin pages with authentication logic. Keywords: ['admin-route', 'authentication', 'protected-route', 'access-control', 'security', 'admin-context', 'navigation-guard']. component_type: ['security', 'routing', 'authentication']. functionality: ['Provides authentication-based route protection for admin areas and redirects unauthorized users to login']. use_case: ['Admin panel protection', 'content management security', 'user authentication', 'role-based access control']. related_files: ['src/contexts/AdminContext.jsx', 'src/components/AdminLayout.jsx', 'src/pages/admin/Login.jsx', 'src/App.jsx']",
  "src/utils/CacheStrategy.js": "This is a comprehensive caching utility that implements advanced caching strategies for web applications to optimize performance and user experience. The class provides multiple caching strategies including cache-first, network-first, stale-while-revalidate, network-only, and cache-only approaches. It manages both browser cache and in-memory cache with automatic cleanup, expiration handling, and performance statistics tracking. The system includes service worker registration for offline functionality, resource preloading capabilities, and configurable cache policies for different resource types like static assets, images, HTML pages, API responses, and dynamic content. It provides detailed cache statistics including hit rates and memory usage monitoring. Keywords: ['caching', 'performance', 'service-worker', 'cache-strategy', 'offline', 'optimization', 'memory-cache', 'browser-cache', 'statistics']. component_type: ['utility', 'performance', 'caching']. functionality: ['Implements sophisticated caching mechanisms with multiple strategies to optimize web application performance and provide offline capabilities']. use_case: ['Performance optimization', 'offline functionality', 'resource caching', 'API response caching', 'static asset management', 'user experience enhancement']. related_files: ['public/sw.js', 'src/App.jsx', 'src/main.jsx', 'src/utils/PerformanceMonitor.js']",
  "src/config/RedirectConfig.js": "This configuration file manages comprehensive redirect settings for the website, handling URL redirections from old paths to new ones. It contains server-level redirect patterns for both Nginx and Apache web servers, database schema for storing dynamic redirects, URL patterns for different content types like blog posts and categories, and monitoring configurations. The file serves as a centralized hub for managing all redirect-related functionality including testing, performance monitoring, and cleanup operations. Keywords: ['redirect', 'nginx', 'apache', 'url-mapping', 'server-config', 'database-schema', 'monitoring', 'performance']. component_type: ['configuration']. functionality: ['Manages URL redirects and server configurations for seamless navigation and SEO preservation']. use_case: ['Website migration', 'URL structure changes', 'SEO optimization', 'Server configuration management']. related_files: ['.htaccess', 'nginx.conf', 'src/utils/BackupManager.js']",
  "src/utils/BackupManager.js": "This utility class provides a comprehensive backup and recovery system for the entire website infrastructure. It handles automated scheduled backups including full, incremental, database, and media backups with configurable retention policies. The system supports multiple storage locations including local, AWS S3, Google Cloud Storage, and Azure Blob Storage with automatic validation and testing capabilities. It includes features for backup monitoring, restoration processes, cleanup operations, and detailed statistics reporting to ensure data integrity and disaster recovery preparedness. Keywords: ['backup', 'recovery', 'automation', 'cloud-storage', 'database-backup', 'scheduling', 'retention-policy', 'disaster-recovery']. component_type: ['utility']. functionality: ['Provides automated backup and recovery operations with multi-cloud storage support and comprehensive monitoring']. use_case: ['Disaster recovery', 'Data protection', 'Automated maintenance', 'Cloud storage management', 'System restoration']. related_files: ['src/config/RedirectConfig.js', 'package.json', '.env']",
  "src/components/CriticalCSS.jsx": "This React component handles critical CSS injection for above-the-fold content to optimize initial page load performance. It dynamically injects essential styles directly into the document head for immediate rendering of navigation, hero section, and core layout elements. The component also manages the asynchronous loading of non-critical CSS files to prevent render-blocking and includes responsive design considerations, accessibility features, and performance optimizations. It ensures the fastest possible initial paint by prioritizing critical styles while deferring less important styling. Keywords: ['critical-css', 'performance', 'above-the-fold', 'render-blocking', 'optimization', 'responsive', 'accessibility']. component_type: ['performance']. functionality: ['Optimizes page load performance by injecting critical CSS and managing non-critical CSS loading']. use_case: ['Performance optimization', 'Initial page load improvement', 'Critical rendering path optimization', 'SEO enhancement']. related_files: ['src/components/Layout.jsx', 'public/css/non-critical.css', 'src/hooks/usePerformance.js']",
  "src/components/admin/UserManagement.jsx": "User management modal component for creating and editing users in the admin panel. This component provides a comprehensive form for managing user details including username, email, password, role assignment, and status. It includes validation, error handling, and role-based permission management. Keywords: ['user form', 'user creation', 'user editing', 'validation', 'role management']. component_type: ['modal', 'form', 'admin']. functionality: ['Provides form interface for creating and editing system users with validation and role management']. use_case: ['User creation', 'User editing', 'Role assignment', 'Permission management']. related_files: ['src/pages/admin/AdminUsers.jsx', 'src/contexts/AdminContext.jsx']",
  "src/components/admin/MFASetup.jsx": "Multi-factor authentication setup component that guides users through the MFA configuration process. This component provides a step-by-step wizard for setting up TOTP-based 2FA including QR code generation, secret key display, verification code input, and backup code generation. Keywords: ['MFA', '2FA', 'authentication', 'security', 'TOTP', 'QR code', 'backup codes']. component_type: ['modal', 'wizard', 'security']. functionality: ['Provides complete MFA setup workflow with QR code generation and backup code management']. use_case: ['Security setup', 'Two-factor authentication', 'Account protection', 'TOTP configuration']. related_files: ['src/pages/admin/AdminUsers.jsx', 'src/components/admin/UserManagement.jsx']",
  "src/components/settings/SMTPSettings.jsx": "SMTP Settings component for configuring email server settings, authentication, and email templates. This component provides a user-friendly interface for administrators to set up email functionality including server configuration, authentication credentials, and customizable email templates for password resets and notifications. Keywords: ['SMTP', 'email', 'server', 'authentication', 'templates', 'configuration']. Component type: ['functional']. Functionality: ['Manages SMTP email server configuration and template settings for the admin panel']. Use case: ['Email server setup', 'Password reset configuration', 'Email template management']. Related files: ['src/pages/admin/AdminSettings.jsx', 'src/utils/SecurityUtils.js']",
  "src/utils/EmailService.js": "This EmailService utility provides comprehensive email functionality for the admin system, including password reset emails, notifications, and SMTP configuration management. It handles email validation, token generation for password resets, logging of email attempts, and provides statistics tracking. The service includes methods for testing SMTP connections, managing email templates, and exporting email logs for analysis. It uses localStorage for demo purposes but can be easily adapted to work with real SMTP servers and databases. Keywords: ['email', 'smtp', 'password-reset', 'notifications', 'logging', 'validation', 'templates']. component_type: ['utility']. functionality: ['Manages email sending, password reset tokens, SMTP settings, and email logging for the admin system']. use_case: ['Password reset functionality', 'Admin notifications', 'Email configuration management', 'Email statistics and logging']. related_files: ['src/pages/admin/AdminLogin.jsx', 'src/components/settings/SMTPSettings.jsx', 'src/pages/admin/SecuritySettings.jsx']",
  "src/components/PasswordReset.jsx": "This component handles the complete password reset flow including request and reset steps. It validates reset tokens, provides password strength indicators, and integrates with the email service for sending reset links. The component includes proper form validation, security measures, and user feedback throughout the process. Keywords: ['password reset', 'security', 'email', 'authentication', 'validation']. component_type: ['functional']. functionality: ['Handles password reset requests and new password setting with security validation']. use_case: ['User password recovery', 'Account security management', 'Authentication flow']. related_files: ['src/utils/EmailService.js', 'src/utils/SecurityUtils.js', 'src/pages/admin/AdminLogin.jsx']",
  "src/utils/StorageManager.js": "Storage manager utility that handles user authentication, session management, and data persistence for the admin system. This file manages user credentials, login validation, and secure storage operations. It creates the root admin account and handles all database-like operations using localStorage. Keywords: ['storage', 'authentication', 'session', 'admin', 'login']. component_type: ['utility']. functionality: ['Manages user authentication and data storage operations for the admin system']. use_case: ['User login', 'Session management', 'Data persistence', 'Admin account creation']. related_files: ['src/contexts/AdminContext.jsx', 'src/pages/admin/AdminLogin.jsx']",
  "src/components/admin/UserManager.jsx": "This component provides a comprehensive user management interface for the admin backend. It allows administrators to view, create, edit, and delete users with different roles and permissions. The component includes features like user search and filtering, role-based access control, MFA management, user status toggling, and detailed user information display. It integrates with the StorageManager for persistent data storage and includes proper logging of all user management actions. Keywords: ['user-management', 'admin', 'roles', 'permissions', 'MFA', 'authentication', 'CRUD']. component_type: ['admin', 'management']. functionality: ['Provides complete user management functionality including creation, editing, deletion, and role management with MFA support']. use_case: ['Managing admin users and their access levels', 'Setting up user roles and permissions', 'Enabling/disabling user accounts and MFA']. related_files: ['src/utils/StorageManager.js', 'src/pages/admin/AdminDashboard.jsx', 'src/contexts/AdminContext.jsx']",
  "src/utils/SettingsStorage.js": "This utility class provides a comprehensive settings storage system with automatic persistence, caching, and change listeners. It manages application settings organized by categories with debounced saving to prevent excessive storage operations. The system includes default settings initialization, import/export functionality, and real-time change notifications. It integrates with the StorageManager for persistent storage and provides a clean API for getting and setting configuration values across the application. Keywords: ['settings', 'storage', 'persistence', 'configuration', 'cache', 'listeners']. component_type: ['utility']. functionality: ['Provides persistent settings management with automatic saving, change listeners, and category-based organization']. use_case: ['Storing application configuration and user preferences', 'Managing system settings with real-time updates', 'Importing and exporting configuration data']. related_files: ['src/utils/StorageManager.js', 'src/pages/admin/AdminSettings.jsx', 'src/contexts/AdminContext.jsx']",
  "src/utils/SupabaseEmailService.js": "This file provides a comprehensive email service integrated with Supabase database for managing admin authentication, password resets, and email logging. It replaces the previous localStorage-based email service with proper database storage for production use. The service handles admin user authentication with the specified credentials (Username: 'Admin', Password: 'Infomax1!'), manages password reset tokens, logs email attempts, and provides session management for secure admin access. It includes methods for SMTP configuration, email statistics, and comprehensive error handling while maintaining the same interface as the original service. Keywords: ['supabase', 'email-service', 'authentication', 'password-reset', 'admin-login', 'session-management', 'database-integration', 'security']. component_type: ['utility', 'service', 'database']. functionality: ['Provides secure admin authentication and email services integrated with Supabase database']. use_case: ['Admin login system', 'Password reset functionality', 'Email logging and statistics', 'Session management']. related_files: ['src/pages/admin/Login.jsx', 'src/pages/admin/SecuritySettings.jsx', 'src/components/AdminRoute.jsx']",
  "src/utils/SupabaseAuthService.js": "This file provides a comprehensive Supabase authentication service for admin users. It handles secure login, session management, password reset functionality, and database operations. The service includes methods for user authentication, session creation and validation, password reset token generation, and cleanup of expired data. It integrates with Supabase database tables for admin_users, admin_sessions, and password_reset_tokens to provide a complete authentication system. Keywords: ['Supabase', 'Authentication', 'Admin', 'Session Management', 'Password Reset', 'Database Integration']. component_type: ['functional']. functionality: ['Provides secure authentication and session management for admin users using Supabase database']. use_case: ['Admin login systems', 'Secure session management', 'Password reset functionality', 'User authentication']. related_files: ['src/contexts/AdminContext.jsx', 'src/pages/admin/AdminLogin.jsx']",
  "src/pages/admin/AIToolsManager.jsx": "This is a comprehensive admin interface for managing AI tools and technologies. The component provides full CRUD functionality for AI tools including creation, editing, deletion, and viewing. It features advanced filtering and search capabilities, statistics dashboard with visual cards, and a responsive grid layout for displaying tools. The interface includes status indicators, complexity levels, and category management. It integrates with Supabase for data persistence and includes proper error handling and user feedback. Keywords: ['AI tools management', 'admin interface', 'CRUD operations', 'filtering', 'statistics dashboard']. component_type: ['functional', 'admin']. functionality: ['Manages AI tools with full CRUD operations, filtering, search, and statistics display']. use_case: ['Admin dashboard', 'content management', 'AI tool catalog management']. related_files: ['src/components/admin/AIToolForm.jsx', 'src/utils/aiToolsService.js', 'src/pages/AITools.jsx']",
  "src/components/admin/AIToolForm.jsx": "This is a comprehensive form component for creating and editing AI tools in the admin area. The form includes all necessary fields for managing AI tool data including basic information, features, tags, metrics, and links. It uses React Hook Form for form management with validation, and includes dynamic field arrays for features and tags. The component provides a user-friendly interface with image preview, proper validation, and loading states. Keywords: ['AI Tool Form', 'Admin Form', 'React Hook Form', 'Dynamic Fields', 'Validation', 'CRUD']. component_type: ['functional']. functionality: ['Provides form interface for creating and editing AI tools with validation and dynamic fields']. use_case: ['Creating new AI tools', 'Editing existing AI tools', 'Form validation and data processing']. related_files: ['src/pages/admin/AIToolsManager.jsx', 'src/utils/aiToolsService.js']"
}